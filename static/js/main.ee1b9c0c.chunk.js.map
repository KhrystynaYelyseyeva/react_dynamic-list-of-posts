{"version":3,"sources":["components/Post/Post.js","shapes/PostShape.js","components/Loader/Loader.jsx","components/PostsList/PostsList.jsx","api/api.js","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","components/Select/Select.js","shapes/UserShape.js","api/posts.js","api/users.js","App.jsx","index.js"],"names":["Post","PropTypes","shape","id","number","isRequired","userId","title","string","post","showPostDetails","isOpen","className","type","onClick","Loader","PostsList","posts","isLoading","selectedPostId","map","key","BASE_URL","request","url","option","a","fetch","response","json","data","method","headers","body","JSON","stringify","getAllComments","getPostComments","postId","allComments","postComment","filter","removeComment","commentId","commentItem","createComment","newComment","NewCommentForm","getComments","useState","name","setName","email","setEmail","setBody","addComment","onSubmit","event","preventDefault","value","onChange","target","placeholder","PostDetails","comments","setComments","hidden","setHidden","fetchData","commentsFromServer","useEffect","handleDelete","current","length","comment","Select","users","selectUser","getAllPosts","getAllUsers","App","setIsLoading","initialPosts","setInitialPosts","setPosts","setUsers","selectedPost","setSelectedPost","postsFromServer","usersFromServer","selectedUserPosts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee1b9c0c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PostShape } from '../../shapes/PostShape';\n\nexport const Post = ({ post, showPostDetails, isOpen }) => (\n  <li className=\"PostsList__item\">\n    <div>\n      <b>\n        [User #\n        {post.userId}\n        ]:&nbsp;\n      </b>\n      {post.title}\n    </div>\n    <button\n      type=\"button\"\n      className=\"PostsList__button button\"\n      onClick={() => {\n        showPostDetails(post);\n      }}\n    >\n      {isOpen ? 'Close' : 'Open'}\n    </button>\n  </li>\n);\n\nPost.propTypes = {\n  post: PostShape.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  showPostDetails: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const PostShape = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  userId: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n}).isRequired;\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PostShape } from '../../shapes/PostShape';\nimport { Post } from '../Post/Post';\nimport { Loader } from '../Loader';\nimport './PostsList.scss';\n\nexport const PostsList = ({\n  posts,\n  showPostDetails,\n  isLoading,\n  selectedPostId,\n}) => {\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <Post\n            post={post}\n            showPostDetails={showPostDetails}\n            key={post.id}\n            isOpen={post.id === selectedPostId}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(PostShape.isRequired).isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  showPostDetails: PropTypes.func.isRequired,\n  selectedPostId: PropTypes.number.isRequired,\n};\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\nexport const POSTS_URL = '/posts';\nexport const USERS_URL = '/users';\nexport const COMMENTS_URL = '/comments';\n\nexport const request = async(url, option) => {\n  const response = await fetch(url, option);\n  const posts = await response.json();\n\n  return posts.data;\n};\n\nexport const remove = url => request(url, { method: 'DELETE' });\n\nexport const post = (url, data) => (\n  request(url, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=utf-8',\n    },\n    body: JSON.stringify(data),\n  })\n);\n","import { BASE_URL, COMMENTS_URL, request, remove, post } from './api';\n\nconst getAllComments = async() => {\n  const response = await request(`${BASE_URL}${COMMENTS_URL}`);\n\n  return response;\n};\n\nexport const getPostComments = async(postId) => {\n  const allComments = await getAllComments();\n  const postComment = allComments\n    .filter(({ postId: commentsPostId }) => commentsPostId === postId);\n\n  return postComment;\n};\n\nexport const removeComment = async(commentId) => {\n  const commentItem = await remove(`${BASE_URL}${COMMENTS_URL}/${commentId}`);\n\n  return commentItem;\n};\n\nexport const createComment = async(data) => {\n  const newComment = await post(`${BASE_URL}${COMMENTS_URL}`, data);\n\n  return newComment;\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { createComment } from '../../api/comments';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ postId, getComments }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const handleBodyChange = (event) => {\n    setBody(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    addComment();\n  };\n\n  const addComment = async() => {\n    const data = {\n      postId,\n      name,\n      email,\n      body,\n    };\n\n    await createComment(data);\n\n    setBody('');\n    getComments();\n  };\n\n  return (\n    <form className=\"NewCommentForm\" onSubmit={handleSubmit}>\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleNameChange}\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          onChange={handleEmailChange}\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          value={body}\n          onChange={handleBodyChange}\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n  getComments: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostComments, removeComment } from '../../api/comments';\nimport './PostDetails.scss';\nimport { PostShape } from '../../shapes/PostShape';\n\nexport const PostDetails = ({ post }) => {\n  const [comments, setComments] = useState([]);\n  const [hidden, setHidden] = useState(false);\n\n  useEffect(() => {\n    fetchData();\n  }, [post.id]);\n\n  async function fetchData() {\n    const commentsFromServer = await getPostComments(post.id);\n\n    setComments(commentsFromServer);\n  }\n\n  const handleHidden = () => {\n    setHidden(current => !current);\n  };\n\n  const handleDelete = async(commentId) => {\n    await removeComment(commentId);\n\n    fetchData(post.id);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={handleHidden}\n        >\n          Hide&nbsp;\n          {comments.length}\n          &nbsp;comments\n        </button>\n\n        <ul className=\"PostDetails__list\" hidden={hidden}>\n          {comments.map(comment => (\n            <li\n              className=\"PostDetails__list-item\"\n              key={comment.id}\n            >\n              <button\n                type=\"button\"\n                className=\"PostDetails__remove-button button\"\n                onClick={() => handleDelete(comment.id)}\n              >\n                X\n              </button>\n              <p>{comment.body}</p>\n            </li>\n          ))}\n        </ul>\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            postId={post.id}\n            getComments={() => fetchData(post.id)}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  post: PostShape.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { UserShape } from '../../shapes/UserShape';\n\nexport const Select = ({ users, selectUser }) => (\n  <label>\n    Select a user: &nbsp;\n\n    <select\n      className=\"App__user-selector\"\n      onChange={selectUser}\n    >\n      <option value=\"0\">All users</option>\n      {users.map(({ id, name }) => (\n        <option value={id} key={id}>{name}</option>\n      ))}\n    </select>\n  </label>\n);\n\nSelect.propTypes = {\n  users: PropTypes.arrayOf(UserShape).isRequired,\n  selectUser: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const UserShape = PropTypes.shape({\n  id: PropTypes.number,\n  userId: PropTypes.number,\n  title: PropTypes.string,\n}).isRequired;\n","import { BASE_URL, POSTS_URL, request } from './api';\n\nexport const getAllPosts = async() => {\n  const response = await request(`${BASE_URL}${POSTS_URL}`);\n\n  return response;\n};\n","import { BASE_URL, USERS_URL, request } from './api';\n\nexport const getAllUsers = async() => {\n  const response = await request(`${BASE_URL}${USERS_URL}`);\n\n  return response;\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { Select } from './components/Select/Select';\nimport { getAllPosts } from './api/posts';\nimport { getAllUsers } from './api/users';\n\nconst App = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [initialPosts, setInitialPosts] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [selectedPost, setSelectedPost] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      const postsFromServer = await getAllPosts();\n      const usersFromServer = await getAllUsers();\n\n      setIsLoading(false);\n      setInitialPosts(postsFromServer);\n      setPosts(postsFromServer);\n      setUsers(usersFromServer);\n    }\n\n    fetchData();\n  }, []);\n\n  const selectUser = ({ target }) => {\n    if (+target.value === 0) {\n      return setPosts(initialPosts);\n    }\n\n    const selectedUserPosts = initialPosts\n      .filter(({ userId }) => +target.value === userId);\n\n    return setPosts(selectedUserPosts);\n  };\n\n  const showPostDetails = (post) => {\n    if (post.id === selectedPost.id) {\n      setSelectedPost(false);\n\n      return;\n    }\n\n    setSelectedPost(post);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <Select\n          users={users}\n          selectUser={selectUser}\n        />\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            isLoading={isLoading}\n            showPostDetails={showPostDetails}\n            selectedPostId={selectedPost.id}\n          />\n        </div>\n\n        {selectedPost && (\n          <div className=\"App__content\">\n            <PostDetails post={selectedPost} />\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}